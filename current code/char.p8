pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
--variables

function _init()
	p={
		sp=1,
		x=59,
		y=39,
		w=2,
		h=4,
  flp=false,
  dx=0,
  dy=0,
  max_dx=2,
  max_dy=3,
  acc=0.5,
  boost=4,
  anim=0,
  running=false,
  jumping=false,
  falling=false,
  sliding=false,
  landed=false
 }
	
	gravity=0.3
	friction=0.85
end
-->8
--update and draw


anim_time=0
foward = true
function _update()
	player_update()
	
	
	
--	anim_time=0
	anim_wait=.35
	
	
	--c resets the original sprite
	--proablly not needed
	--foward = true
	c = 1
	x = 0
	q = -1
	x=print( time() - anim_time)
	 if time() - anim_time > anim_wait then
    if p.sp == 1 then
      p.sp+=2
      anim_time = time()
    --end
   elseif p.sp == 3 and foward == true then
     p.sp+=2
     q = p.sp
      anim_time = time()
    --end
    elseif p.sp == 5  then
      p.sp = 3
      q = 696969696969
      foward = false
      anim_time = time()
    --end
     else-- p.sp == 3 and foward == false then
      p.sp = 1
      foward = true
      anim_time = time()
    end
   
    
   -- if p.sp > 5  then
     -- p.sp = c
      --anim_time=0
   -- end
  end
	--player_animate()
end

function _draw()

	cls()
	map(0,0)
	spr(p.sp, p.x, p.y, p.w, p.h)
	
	--prints the time at the top right
	print( q)
end

function draw_gameover()
	--nothing yet
end
-->8
--collisions

function collide_map(obj,aim,flag)
	--obj = table needs x,y,w,h
	--aim = left,right,up,down
	
	local x=obj.x		local y=obj.y
	local w=obj.w		local h=obj.h
	
	local x1=0		local y1=0
	local x2=0		local y2=0
	
	if aim=="left" then
		x1=x-1		y1=y
		x2=x				y2=y+h-1
	
	elseif aim=="right" then
		x1=x+w			y1=y
		x2=x+w+1	y2=y+h-1
	
	elseif aim=="up" then
		x1=x+1			y1=y-1
		x2=x+w-1	y2=y
	
	--collision box not in correct area
	elseif aim=="down" then
		x1=x					y1=y-h
		x2=x+w			y2=y+h
	end
		
		--pixels to tiles
		x1/=8				y1/=8
		x2/=8				y2/=8
		
		if fget(mget(x1,y1), flag)
		or fget(mget(x1,y2), flag)
		or fget(mget(x2,y1), flag)
		or fget(mget(x2,y2), flag) then
			return true
		else
			return false	
		end
		
end
-->8
--player

function player_update()
	--physics
	p.dy+=gravity
	p.dx*=friction
	
--	anim_time=0
--	anim_wait=.05
	
	--c resets the original sprite
	--proablly not needed
	
	--c = 1
	
	
	-- if time() - anim_time > anim_wait then
 --   p.sp+=6
 --   anim_time = time()

 --   if p.sp > 7  then
 --     p.sp = c
 --   end
 -- end
	
	--controls
	if btn(⬅️) then
		p.sp=7--was 3
		p.dx-=p.acc
		p.running=true
		p.flp=true
		
		c = 3
	end
	if btn(➡️) then
	
	 --if time() - anim_time > anim_wait then
   -- p.sp+=6
   -- anim_time=time()

   -- if p.sp > 7 then
     -- p.sp = 1
   -- end
 -- end
	--	p.sp=1
	c = 1
		p.dx+=p.acc
		p.running=true
		p.flp=false
	end
	
	--slide
	if p.running
	and not btn(⬅️)
	and not btn(➡️)
	and not p.falling
	and not p.jumping then
		p.running=false
		p.sliding=true
	end
	
	--jump
	if btnp(❎)
	and p.landed then
		p.sp=7
		p.dy-=p.boost
		p.landed=false
	end
	
	-- check collision up and down
	if p.dy>0 then
		p_falling = true
		p_landed = false
		p.jumping=false
		
		if collide_map(p, "down", 0) then
			p.landed=true
			p.falling=false
			p.dy=0
			p.y-=(p.y+p.h)%8
		end
	elseif p.dy<0 then
		p.jumping=true
		if collide_map(p, "up", 1) then
			p.dy=0
		end
	end
	
--check collision left and right
	if p.dx<0 then
		if collide_map(p, "left", 1) then
			p.dx=0
		end
	elseif p.dx>0 then
		if collide_map(p, "right", 1) then
			p.dx=0
		end
	end

	--stop sliding
	if p.sliding then
		if abs(p.dx)<.2
		or p.running then
			p.dx=0
			p.sliding=false
		end
	end
	
	--movement
	p.x+=p.dx	
	p.y+=p.dy
		
end

--function player_animate()
--	if p.jumping then
	--	p.sp=7
	--if p.sliding then
	--	p.sp=1
	--else --player idle
		--p.sp=1
	--end
--end
--end
__gfx__
00000000000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000000000000
00000000000444444400000200044444440000020004444444000002000111111100000200011111110000020001111111000002000000000000000000000000
0070070000444ffff440000300444ffff440000300444ffff4000003001114444110000300111444411000030011144441000003000000000000000000000000
0007700000444ffff440000400444ffff440000400444ffff4000004001114444110000400111444411000040011144441000004000000000000000000000000
00077000004f4ffff4400005004f4ffff4400005004f4ffff4000005001414444110000500141444411000050014144441000005000000000000000000000000
0070070000494ffff400000604494ffff400000604494ffff4000006001a144441000006011a144441000006011a144441000006000000000000000000000000
00000000004449f944000007044449f940000007444449f90000000700111a4a1100000701111a4a1000000711111a4a00000007000000000000000000000000
000000000044995894000008040099589000000844009958900000080011aa8ca10000080100aa8ca00000081100aa8ca0000008000000000000000000000000
00000000004099599000000c000099599000000c000099599000000c0010aa8aa000000c0000aa8aa000000c0000aa8aa000000c000000000000000000000000
00000000000999599000000d000099599900000d000999599000000d000aaa8aa000000d0000aa8aaa00000d000aaa8aa000000d000000000000000000000000
0000000000090911f000000e0000f1190900000e00090911f000000e000a0a554000000e0000455a0a00000e000a0a554000000e000000000000000000000000
00000000000f01110000000f000001110f00000f000f01110000000f000405550000000f000005550400000f000405550000000f000000000000000000000000
00000000000001010000000100000101000000010000010100000001000005050000000100000505000000010000050500000001000000000000000000000000
00000000000011010000000200001101000000020000110100000002000055050000000200005505000000020000550500000002000000000000000000000000
00000000000010010000000300001001000000030000100100000003000050050000000300005005000000030000500500000003000000000000000000000000
00000000000060060000000400006006000000040000600600000004000060060000000400006006000000040000700700000004000000000000000000000000
00000000000000000000000100000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000aaaaaaa000002000eeeeeee0000020004444444000002000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaffffaa0000300eeeffffee0000300444ffff4000003000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaffffaa0000400eeeffffee0000400444ffff4000004000000000000000000000000000000000000000000000000000000000000000000000000
0000000000afaffffaa0000500efeffffee00005004f4ffff4000005000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aeaffffa0000060ee9effffe00000604494ffff4000006000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaefeaa0000070eeeedfde0000007444449f900000007000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaee28ea0000080e00dd57d00000084400995890000008000000000000000000000000000000000000000000000000000000000000000000000000
0000000000a0ee2ee000000c0000dd5dd000000c000099599000000c000000000000000000000000000000000000000000000000000000000000000000000000
00000000000eee2ee000000d0000dd5ddd00000d000999599000000d000000000000000000000000000000000000000000000000000000000000000000000000
00000000000e0e66f000000e0000f66d0d00000e00090911f000000e000000000000000000000000000000000000000000000000000000000000000000000000
00000000000f06660000000f000006660f00000f000f01110000000f000000000000000000000000000000000000000000000000000000000000000000000000
00000000000006060000000100000606000000010000010100000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000066060000000200006606000000020000110100000002000000000000000000000000000000000000000000000000000000000000000000000000
00000000000060060000000300006006000000030000100100000003000000000000000000000000000000000000000000000000000000000000000000000000
00000000000050050000000400005005000000040000600600000004000000000000000000000000000000000000000000000000000000000000000000000000
